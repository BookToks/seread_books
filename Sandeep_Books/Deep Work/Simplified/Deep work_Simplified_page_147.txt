In the next week, please email me everything you remember about our talk about the problem. When I get your message, I’ll start a shared folder for the project and add a document that sums up what you sent me, along with what I remember from our past talk. In that document, I’ll point out the two or three best next steps.

We can then work on those next steps for a few weeks and check back later. I suggest we set up a phone call for a month from now to do that. Below, I listed some dates and times when I’m free for a call. When you send your notes, tell me which date and time works best for you, and that will count as confirmation for the call. I’m excited to work on this problem with you.

Thanks for getting back to me. I’m going to read your draft of the article and send you an edited version with comments on Friday (the 10th). In my version, I’ll fix what I can and add notes where I think you should make changes. After that, you should have everything you need to finish and submit the final draft. You don’t need to reply or follow up unless there’s a problem.

When I wrote these example replies, I first figured out what the project was. The word “project” can mean big things like solving a research problem (like in Example #2), but it also works for small things like planning a coffee meeting (Example #1). Then I thought about a simple way to move from where we are now to where we want to be, without sending a bunch of emails. The last step was to write a reply that clearly explains the process and our current status. These examples focus on replying to emails, but the same idea works when you write an email from the start.

Using this process-focused way to handle emails can really save you time and attention. There are two reasons for this. First, it lowers the number of emails you get—sometimes by a lot. For example, just setting up a coffee meeting can turn into half a dozen emails over many days if you’re not careful. This means you spend less time checking emails and don’t have to think as hard when you do.

Second, using a good process-focused message, like David Allen says, “closes the loop” on the project. This means it clearly finishes or moves the project forward so you don’t have to keep thinking about it.
